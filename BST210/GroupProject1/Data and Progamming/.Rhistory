sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
summary(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
summary(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
summary(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + gender + s(age), data = sorted_dat)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
summary(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
summary(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
summary(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + gender + s(age), data = sorted_dat)
summary(age.gender.bmi.4)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
summary(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
summary(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
summary(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
summary(age.gender.bmi.4)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
AIC(lm(tc~bmi+ I(bmi^2) +age), data = sorted_dat)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
AIC(lm(tc~bmi+ I(bmi^2) +age, data = sorted_dat))
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
AIC(lm(tc~bmi+ I(bmi^2) + s(age) + s(age*gender), data = sorted_dat))
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
AIC(lm(tc~bmi + s(age) + s(age*gender), data = sorted_dat))
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
AIC(lm(tc~bmi + s(age) + s(age*gender) + s(I(age^2) * gender), data = sorted_dat))
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
AIC(lm(tc~bmi + s(age) + s(age*gender) + s(age^2 * gender), data = sorted_dat))
sorted_dat = dat[order(dat$age),]
head(sorted_dat)
mod1 = lm(tc~age, data = sorted_dat)
mod2 = lm(tc~age+I(age^2), data = sorted_dat)
mod3 = lm(tc~bSpline(age, knots = quantile(age, c(0.25,0.5,0.75)), degree =2), data = sorted_dat)
attach(sorted_dat)
plot(age, tc)
lines(age, fitted(mod1), col = "red")
lines(age, fitted(mod2), col = "blue")
lines(age, fitted(mod3), col = "green")
legend("topright", c("linear age", "linear & quadratic age", "Spline modeling of age"), col = c("red", "blue", "green"), lwd = 1, cex = 0.6)
summary1 = summary(mod1)
summary2 = summary(mod2)
summary3 = summary(mod3)
summary1
summary2
summary3
detach(sorted_dat)
dat <- read.csv("~/Documents/Class Info/Harvard HSPH/Fall2019/BST210/Homework#1/Data and Programs/SCCS2_v12.csv")
install.packages("gam")
library(splines2)
library(gam)
install.packages("gam")
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("/Users/BiankaUrsul/Documents/Class Info/Harvard HSPH/Fall2019/BST210/Homework#1/Data and Programs/SCCS2_v12.csv")
install.packages("gam")
library(splines2)
library(gam)
dat <- read.csv("/Users/BiankaUrsul/Documents/Class Info/Harvard HSPH/Fall2019/BST210/Homework#1/Data and Programs/SCCS2_v12.csv")
library(splines2)
library(gam)
library(splines2)
mod4 = lm(tc~age + bSpline(age, knots = quantile(age, c(0.25,0.5,0.75)), degree = 2), data = sorted_dat)
summary4 = summary(mod4)
summary4
summary3
attach(sorted_dat)
plot(age, tc, main = "Total cholesterol vs. age", xlab = "age", ylab = "total cholesterol")
lines(age, fitted(mod3), col = "green", lty = "solid")
lines(age, fitted(mod4), col = "orange", lty = "dashed")
legend("topright", c("spline", "spline + age"), col = c("green", "orange"), lty = c("solid", "dashed"), lwd = 1, cex = .5)
difference = fitted(mod3)-fitted(mod4)
detach(sorted_dat)
library(splines2)
mod4 = lm(tc~age + bSpline(age, knots = quantile(age, c(0.25,0.5,0.75)), degree = 2), data = sorted_dat)
summary4 = summary(mod4)
summary4
summary3
attach(sorted_dat)
plot(age, tc, main = "Total cholesterol vs. age", xlab = "age", ylab = "total cholesterol")
lines(age, fitted(mod3), col = "green", lty = "solid")
lines(age, fitted(mod4), col = "orange", lty = "dashed")
legend("topright", c("spline", "spline + age"), col = c("green", "orange"), lty = c("solid", "dashed"), lwd = 1, cex = .5)
difference = fitted(mod3)-fitted(mod4)
difference
detach(sorted_dat)
anova(mod2, mod5)
anova(mod2, mod3)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
age.gender.bmi.6 = lm(tc~ bmi + age + age*gender, data=sorted_dat)
AIC(age.gender.bmi.6)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
age.gender.bmi.6 = lm(tc~ bmi + I(bmi^2) + age + age*gender, data=sorted_dat)
AIC(age.gender.bmi.6)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
age.gender.bmi.6 = lm(tc~ bmi  + age + age*gender, data=sorted_dat)
AIC(age.gender.bmi.6)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
age.gender.bmi.6 = lm(tc~ bmi +I(bmi^2) + age + age*gender, data=sorted_dat)
AIC(age.gender.bmi.6)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
age.gender.bmi.6 = gam(tc~ bmi +I(bmi^2) + s(age) + s(age*gender), data=sorted_dat)
AIC(age.gender.bmi.6)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
age.gender.bmi.6 = gam(tc~ bmi +I(bmi^2) + s(age) + s(age*gender), data=sorted_dat)
AIC(age.gender.bmi.6)
summary(age.gender.bmi.6)
anova(mod2, mod5)
summary1
summary(age.gender.bmi1)
summary(age.gender.bmi.1)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
AIC(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc~ bmi + bSpline(age, df = 10, degree = 2) + bSpline(age*gender, df = 6, degree = 1), data = sorted_dat)
AIC(age.gender.bmi.3)
age.gender.bmi.4 = gam(tc~ bmi + s(age) + s(age*gender), data = sorted_dat)
AIC(age.gender.bmi.4)
age.gender.bmi.5 = gam(tc~ bmi + s(age), data = sorted_dat)
AIC(age.gender.bmi.5)
age.gender.bmi.6 = gam(tc~ bmi +I(bmi^2) + s(age) + s(age*gender), data=sorted_dat)
AIC(age.gender.bmi.6)
summary(age.gender.bmi.6)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi + bSpline(age, df = 6, degree = 2) + bSpline(gender, df = 6, degree = 1), data = sorted_dat)
summary(age.gender.bmi.1)
age.gender.bmi.2 = lm(tc~ bmi + gender + bSpline(age, df = 6, degree = 2), data = sorted_dat)
summary(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc ~ bmi +I(bmi^2) + bSpline(age,df = 6, degree = 2), data = sorted_dat)
summary(age.gender.bmi.3)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi), data = sorted_dat)
sorted_dat$bmi= sorted_dat$weight / (sorted_dat$height/100)^2
age.gender.bmi.1 = lm(tc~ bmi, data = sorted_dat)
summary(age.gender.bmi.1)
age.gender.bmi.4 = lm(tc~ bmi + I(bmi^2) + bSpline(age,df = 6, degree = 2) +bSpline(age*gender, df=6, degree=2), data = sorted_dat)
summary(age.gender.bmi.4)
age.gender.bmi.4 = lm(tc~ bmi + I(bmi^2) + bSpline(age,df = 6, degree = 2) +bSpline(age*gender, df=6, degree=1), data = sorted_dat)
summary(age.gender.bmi.4)
age.gender.bmi.2 = lm(tc~ bmi + gender + age, data = sorted_dat)
summary(age.gender.bmi.2)
age.gender.bmi.3 = lm(tc ~ bmi +I(bmi^2) + age, data = sorted_dat)
summary(age.gender.bmi.3)
age.gender.bmi.4 = lm(tc~ bmi + I(bmi^2) + age + I(age^2), data = sorted_dat)
summary(age.gender.bmi.4)
age.gender.bmi.4 = lm(tc~ bmi + I(bmi^2) + age + I(age*gender), data = sorted_dat)
summary(age.gender.bmi.4)
age.gender.bmi.2 = lm(tc~ bmi + I(bmi^2) , data = sorted_dat)
summary(age.gender.bmi.2)
age.gender.bmi.4 = lm(tc ~ bmi +I(bmi^2) + gender, data = sorted_dat)
summary(age.gender.bmi.4)
age.gender.bmi.5 = lm(tc~ bmi + I(bmi^2) + age + I(age*bmi), data = sorted_dat)
summary(age.gender.bmi.5)
age.gender.bmi.6 = lm(tc~ bmi + I(bmi^2) + age + I(gender*bmi), data = sorted_dat)
summary(age.gender.bmi.6)
final.model = age.gender.bmi.4
summary(final.model)
final.model = age.gender.bmi.3
summary(final.model)
confint(final.model)
confint(final.model) * 38.67
confint(final.model)
confint(final.model)
confint(final.model) *38.67
confint(final.model) *38.67
summary(final.model).coefficients
confint(final.model) *38.67
summary(final.model)$coefficients
confint(final.model) *38.67
summary(final.model)$coefficients * 38.67
wrap_rmd("BST210-HW3.pdf", width = 80, text = NULL, backup)
wrap_rmd(file, width = 80, text = NULL, backup)
wrap_rmd("BST210-HW3.rmd", width = 80, text = NULL, backup)
wrap_rmd("BST210-HW3.rmd", width = 80, text = NULL, backup)
View(dat)
```{r}
View(dat)
dat = read.csv("hers.BST210.csv")
setwd("~/Documents/Class Info/Harvard HSPH/Fall2019/BST210/GroupProject1/Data and Progamming")
dat = read.csv("hers.BST210.csv")
View(dat)
View(dat)
dat["HDL1"] - dat["HDL"]
View(dat)
dat[which(dat["HT"] == "hormone therapy")] = 1
hers = read.csv("hers.BST210.csv")
View(dat)
hers[which(hers["HT"] == "hormone therapy")] = 1
class(hers$physact)
levels(hers$physact)
levels(hers$physact) = c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active")
levels(hers$physact) = c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active")
levels(hers$physact)
levels(hers$physact) = c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active")
hers$physact = as.numeric(hers$physact)
levels(hers$physact) = c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active")
hers$physact = as.numeric(hers$physact)
levels(hers$physact) = c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active")
hers$physact = as.numeric(hers$physact)
head(hers)
levels(hers$physact) = c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active")
hers$physact = as.numeric(as.characters(hers$physact))
levels(hers$physact) = c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active")
hers$physact = as.numeric(as.character(hers$physact))
head(hers)
hers = read.csv("hers.BST210.csv")
levels(hers$physact) = c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active")
hers$physact = as.numeric(as.character(hers$physact))
head(hers)
View(dat)
hers = read.csv("hers.BST210.csv")
View(hers)
factor(c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active"))
factor(c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active")) = c(1,2,3,4,5)
x = factor(c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active"))
str(x)
x = factor(c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active"))
x
x = factor(c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active"))
str(x)
x = factor(c("much more active", "somewhat more active", "about as active",  "somewhat less active",  "much less active"))
str(x)
hers=read.csv("hers.BST210.csv")
setwd("~/Documents/Class Info/Harvard HSPH/Fall2019/BST210/GroupProject1/Data and Progamming")
hers=read.csv("hers.BST210.csv")
setwd("~/Documents/Class Info/Harvard HSPH/Fall2019/BST210/GroupProject1/Data and Progamming")
hers=read.csv("hers.BST210.csv")
hers=read.csv("hers.BST210.csv")
hers=read.csv("~/Documents/Class Info/Harvard HSPH/Fall2019/BST210/GroupProject1/Data and Progamming/
hers.BST210.csv")
hers=read.csv("~/Documents/Class Info/Harvard HSPH/Fall2019/BST210/GroupProject1/Data and Progamming/
hers.BST210.csv")
hers=read.csv("~/Documents/Class Info/Harvard HSPH/Fall2019/BST210/GroupProject1/Data and Progamming/
hers.BST210.csv")
setwd("~/Documents/Class Info/Harvard HSPH/Fall2019/BST210/GroupProject1/Data and Progamming")
hers=read.csv("hers.BST210.csv")
hers=read.csv("/hers.BST210.csv")
hers=read.csv("hers.BST210.csv")
hers = read.csv("hers.BST210.csv")
hers = read.csv("hers.BST210.csv")
hers=read.csv("hers.BST210.csv")
setwd("~/Documents/Class Info/Harvard HSPH/Fall2019/BST210/GroupProject1/Data and Progamming")
hers = read.csv("hers.BST210.csv")
hers=read.csv("hers.BST210.csv")
hers=na.omit(hers)
hers$HT=1*(hers$HT=='hormone therapy')
hers$white=1*(hers$raceth=='White')
hers$AA=1*(hers$raceth=='African American')
hers$smoking=1*(hers$smoking=='yes')
hers$drinkany=1*(hers$drinkany=='yes')
hers$exercise=1*(hers$exercise=='yes')
hers$physact=factor(hers$physact,levels=c("much less active", "somewhat less active", "about as active",  "somewhat more active",  "much more active"))
hers$physact=as.numeric(hers$physact)
hers$globrat=as.numeric(factor(hers$globrat,levels=c('poor','fair','good','very good', 'excellent')))
hers$poorfair=1*(hers$poorfair=='yes')
hers$htnmeds=1*(hers$htnmeds=='yes')
hers$statins=1*(hers$statins=='yes')
hers$diabetes=1*(hers$diabetes=='yes')
hers$dmpills=1*(hers$dmpills=='yes')
hers$insulin=1*(hers$insulin=='yes')
hers=hers[,-c(3,4)]
hers=na.omit(hers)
hers$LDL_diff=(hers$LDL1-hers$LDL)/hers$LDL
hers$HDL_diff=(hers$HDL1-hers$HDL)/hers$HDL
hers$TG_diff=(hers$TG1-hers$TG)/hers$TG
hers$weight_diff=(hers$weight1-hers$weight)/hers$weight
hers$BMI_diff=(hers$BMI1-hers$BMI)/hers$BMI
hers$waist_diff=(hers$waist1-hers$waist)/hers$waist
hers$WHR_diff=(hers$WHR1-hers$WHR)/hers$WHR
hers$glucose_diff=(hers$glucose1-hers$glucose)/hers$glucose
hers$LDL_diff_binary=1*(hers$LDL_diff<0)
hers$HDL_diff_binary=1*(hers$HDL_diff>0)
hers$TG_diff_binary=1*(hers$TG_diff<0)
# discuss the threshold instead of 0
hers2=hers[,-c(15:32,35,38:48)]
outcome=hers[,c(46:48)]
# Logistic model predicting the difference in LDL between year 1 and baseline --- increase=1,decrease=0
logit_LDL=glm(outcome$LDL_diff_binary~.,family=binomial(),data=hers2)
summary(logit_LDL)
logit_LDL_reduced=glm(outcome$LDL_diff_binary~HT,family=binomial(),data=hers2)
summary(logit_LDL_reduced)
logit_LDL_reduced=glm(outcome$LDL_diff_binary~HT,family=binomial(),data=hers2)
summary(logit_LDL_reduced)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT*statins,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT*statins,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced=glm(outcome$LDL_diff_binary~HT,family=binomial(),data=hers2)
summary(logit_LDL_reduced)
anova(logit_HDL_reduced,logit_HDL_reduced2,test='Chisq')
# Logistic model predicting the difference in HDL between year 1 and baseline --- decrease=1,increase=0
logit_HDL=glm(outcome$HDL_diff_binary~.,family = binomial(),data=hers2)
summary(logit_HDL)
# Logistic model predicting the difference in LDL between year 1 and baseline --- increase=1,decrease=0
logit_LDL=glm(outcome$LDL_diff_binary~.,family=binomial(),data=hers2)
summary(logit_LDL)
logit_LDL_reduced=glm(outcome$LDL_diff_binary~HT,family=binomial(),data=hers2)
summary(logit_LDL_reduced)
# Logistic model predicting the difference in LDL between year 1 and baseline --- increase=1,decrease=0
logit_LDL=glm(outcome$LDL_diff_binary~.,family=binomial(),data=hers2)
summary(logit_LDL)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT+age,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced=glm(outcome$LDL_diff_binary~HT,family=binomial(),data=hers2)
summary(logit_LDL_reduced)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT+smoking,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT+drinkany,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT+exercise,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT+physact,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT+globrat,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT+HT*age,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT+HT*smoking,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT+HT*drinkany,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT+HT*statins,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced2=glm(outcome$LDL_diff_binary~HT+HT*statins,family=binomial(),data=hers2)
summary(logit_LDL_reduced2)
logit_LDL_reduced3=glm(outcome$LDL_diff_binary~HT+statins,family=binomial(),data=hers2)
summary(logit_LDL_reduced3)
anova(logit_LDL_reduced3,logit_LDL_reduced2,test='Chisq')
### THE BEST MODEL IS LDL_diff_binary ~ HT + statins + HT * statins
logit_LDL_reduced3=glm(outcome$LDL_diff_binary~HT+HT*.,family=binomial(),data=hers2)
summary(logit_LDL_reduced3)
logit_LDL_reduced3=glm(outcome$LDL_diff_binary~HT+HT*physact,family=binomial(),data=hers2)
summary(logit_LDL_reduced3)
logit_LDL_reduced3=glm(outcome$LDL_diff_binary~HT+HT*.,family=binomial(),data=hers2)
summary(logit_LDL_reduced3)
logit_LDL_reduced3=glm(outcome$LDL_diff_binary~HT+HT*physact + HT*statins.,family=binomial(),data=hers2)
logit_LDL_reduced3=glm(outcome$LDL_diff_binary~HT+HT*physact + HT*statins,family=binomial(),data=hers2)
summary(logit_LDL_reduced3)
library(ROCR)
install.packages("ROCR")
library(ROCR)
fitted.results_LDL=predict(logit_LDL_reduced3,newdata = hers2,type = 'response')
pred <- prediction(fitted.results_LDL, outcome$LDL_diff_binary)
perf <- performance(pred,"tpr","fpr")
plot(perf,colorize=T)
performance(pred,"auc")
fitted.results_LDL2 =predict(logit_LDL_reduced2 ,newdata = hers2,type = 'response')
pred2 <- prediction(fitted.results_LDL2, outcome$LDL_diff_binary)
perf2 <- performance(pred2,"tpr","fpr")
plot(perf2,colorize=T)
performance(pred2,"auc")
performance(pred,"auc")
anova(logit_LDL_reduced2,logit_LDL_reduced3, "chisq")
anova(logit_LDL_reduced,logit_LDL_reduced3, "chisq")
logit_LDL_reduced4 = glm(outcome$LDL_diff_binary~HT+HT*physact,family=binomial(),data=hers2)
logit_LDL_reduced4 = glm(outcome$LDL_diff_binary~HT+HT*physact,family=binomial(),data=hers2)
anova(logit_LDL_reduced, logit_LDL_reduced2,"chisq")
logit_LDL_reduced4 = glm(outcome$LDL_diff_binary~HT+HT*physact,family=binomial(),data=hers2)
anova(logit_LDL_reduced, logit_LDL_reduced2,test = "chisq")
logit_LDL_reduced4 = glm(outcome$LDL_diff_binary~HT+HT*physact,family=binomial(),data=hers2)
anova(logit_LDL_reduced, logit_LDL_reduced2,test = "Chisq")
anova(logit_LDL_reduced, logit_LDL_reduced3,test = "Chisq")
